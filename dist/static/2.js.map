{"version":3,"sources":["webpack:///./src/components/UI/Spinner/Spinner.js","webpack:///./src/components/UI/Spinner/Spinner.css","webpack:///./src/components/MessageList/MessageList.js","webpack:///./src/components/MessageList/MessageList.css","webpack:///./src/components/UI/SendMessageForm/SendMessageForm.js","webpack:///./src/components/UI/SendMessageForm/SendMessageForm.css","webpack:///./src/containers/Chat/Chat.css","webpack:///./src/utils/getName/getName.js","webpack:///./src/containers/Chat/Chat.js"],"names":["__webpack_require__","props","style","modal","color","chatBox","_react2","default","createElement","className","classes","loader","module","exports","load6","round","_react","MessageList","document","getElementById","scrollIntoView","behavior","Component","_this2","this","content","_Spinner2","count","loading","_Auxiliary2","ScrollDownDiv","onClick","scrollToBottom","messages","map","message","id","you","length","senderId","fire","auth","currentUser","uid","backgroundColor","float","key","TimeStyle","createdAt","sender","name","padding","text","height","display","scrollDownDiv","messageList","timeStyle","MessageForm","onSubmit","handleSubmit","onChange","event","changed","type","placeholder","value","SendButton","messageForm","sendButton","Chat","chat","_fire","getName","Promise","resolve","reject","database","ref","on","snapshot","val","displayName","error","_chatkitClient","_getName","Chatkit","require","_this","_classCallCheck","_getPrototypeOf","call","state","stillFetching","handleMessageChange","bind","_assertThisInitialized","dotenv","load","onAuthStateChanged","user","username","chatkit","instanceLocator","process","then","catch","err","Error","getUser","createUser","res","setState","ChatManager","userId","tokenProvider","TokenProvider","url","connect","joinRoom","roomId","room","subscribeToRoom","hooks","onMessage","concat","messageLimit","leaveRoom","e","preventDefault","target","_this3","sendMessage","_this4","textAlign","_MessageList2","_SendMessageForm2"],"mappings":"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","file":"static/2.js","sourcesContent":["import React from 'react'\n\nimport classes from './Spinner.css'\n\nconst spinner = (props) => {\n    let style = {};\n    if (props.modal) {\n        style = {\n            color: '#CD295A'\n        }\n    } else if (props.chatBox) {\n        style = {\n            color: 'silver'\n        }\n    }\n    return (\n        <div style={style} className={classes.loader}>\n        \n        </div>\n    );\n};\n\nexport default spinner;","// removed by extract-text-webpack-plugin\nmodule.exports = {\"loader\":\"UBmsktTD6us6IP-6aYec5\",\"load6\":\"_3S2CE-OEuu4vdmsJlqdcwr\",\"round\":\"_2qdnMg3AezWSYwmeeap8bJ\"};","import React, { Component } from \"react\";\n\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport fire from \"../../config/fire\";\nimport classes from \"./MessageList.css\";\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\n\nexport default class MessageList extends Component {\n\n    scrollToBottom = () => {\n        document.getElementById('latest').scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    render () {\n        let content = <Spinner chatBox={true} />, count = 0;\n        if (!this.props.loading) {\n            content = (\n                <Aux>\n                    <div className={classes.ScrollDownDiv}>\n                        <span onClick={this.scrollToBottom}> Scroll down to the latest message</span>\n                        <i onClick={this.scrollToBottom} className=\"material-icons\"> vertical_align_bottom </i>\n                    </div>\n                    <ul className={classes.MessageList}>\n                        {\n                            this.props.messages.map(message => {\n                                let style = {}, id='', you=false;\n                                count++;\n                                if (count === this.props.messages.length) id='latest';\n                                if (message.senderId === fire.auth().currentUser.uid) {\n                                    style = {backgroundColor: '#38ADAE', color: '#fff', float: 'right'};\n                                    you = true;\n                                }\n\n                                return (\n                                    <Aux key={message.id}>\n                                        <li style={style}>\n                                            <span className={classes.TimeStyle}> {message.createdAt} </span>\n                                            <div>\n                                                Sender: {you ? 'You' : message.sender.name}\n                                            </div>\n                                            <div style={{padding: '0 20px'}}>\n                                                {message.text}\n                                            </div>\n                                        </li>\n                                        <div id={id} style={{height: '1px', display: count === this.props.messages.length ? 'block':'none'}}> </div>\n                                    </Aux>\n                                )\n                            })\n                        }\n                    </ul>\n                </Aux>\n            );\n        }\n        return content;\n    }\n}","// removed by extract-text-webpack-plugin\nmodule.exports = {\"ScrollDownDiv\":\"py8e93--eQQtlChDf3r08\",\"scrollDownDiv\":\"py8e93--eQQtlChDf3r08\",\"MessageList\":\"_2oerWiM9vePfRjByng1n95\",\"messageList\":\"_2oerWiM9vePfRjByng1n95\",\"TimeStyle\":\"_2gHGA6QN_eF6cxAtIq1-Hl\",\"timeStyle\":\"_2gHGA6QN_eF6cxAtIq1-Hl\"};","import React from \"react\";\n\nimport classes from \"./SendMessageForm.css\";\n\nconst sendMessageForm = props => (\n    <form className={classes.MessageForm} onSubmit={props.handleSubmit}>\n        <input\n            onChange={(event) => props.changed(event)}\n            type=\"text\"\n            placeholder=\"Your message...\"\n            value={props.message} />\n            <i onClick={props.handleSubmit} className={\"material-icons \" + classes.SendButton}>send</i>\n    </form>\n);\n\nexport default sendMessageForm;","// removed by extract-text-webpack-plugin\nmodule.exports = {\"MessageForm\":\"vNmnlkEvqeDfF8k4ZB1qJ\",\"messageForm\":\"vNmnlkEvqeDfF8k4ZB1qJ\",\"SendButton\":\"morg6QiYzLhY9j1vi82Si\",\"sendButton\":\"morg6QiYzLhY9j1vi82Si\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"Chat\":\"_2BK_doRKxlAkQZNg5PsVwe\",\"chat\":\"_2BK_doRKxlAkQZNg5PsVwe\"};","import fire from \"../../config/fire\";\n\nexport const getName = () => {\n  return new Promise((resolve, reject) => {\n     fire.database().ref('usersData/' + fire.auth().currentUser.uid).on('value', snapshot => {\n         resolve(snapshot.val().displayName);\n     }, error => {\n         reject(error);\n     }) ;\n  });\n};","import React, { Component } from \"react\";\n\nimport { ChatManager, TokenProvider } from \"@pusher/chatkit-client\";\nimport MessageList from \"../../components/MessageList/MessageList\";\nimport SendMessageForm from \"../../components/UI/SendMessageForm/SendMessageForm\";\nimport dotenv from \"dotenv\";\nimport fire from \"../../config/fire\";\nimport classes from \"./Chat.css\";\nimport { getName } from \"../../utils/getName/getName\";\n\nconst Chatkit = require('@pusher/chatkit-server');\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            messages: [],\n            currentUser: null,\n            stillFetching: true\n        };\n        this.handleMessageChange = this.handleMessageChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        dotenv.load();\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                let username = '';\n                const chatkit = new Chatkit.default({\n                    instanceLocator: process.env.REACT_APP_INSTANCE_LOC,\n                    key: process.env.REACT_APP_CHATKIT_KEY\n                });\n                getName()\n                    .then(name => {\n                        username = name;\n                    })\n                    .catch(err => {\n                        throw new Error(err);\n                    });\n                chatkit.getUser({\n                    id: user.uid\n                })\n                    .then(() => {})\n                    .catch(() => {\n                        chatkit.createUser({\n                            id: user.uid,\n                            name: username\n                        })\n                            .then(res => {\n                                this.setState({ currentUser: res });\n                            })\n                            .catch(() => {});\n                    });\n\n                const chatManager = new ChatManager({\n                    instanceLocator: process.env.REACT_APP_INSTANCE_LOC,\n                    userId: user.uid,\n                    tokenProvider: new TokenProvider({ url: process.env.REACT_APP_TEST_TOKEN })\n                });\n\n                chatManager.connect()\n                    .then(currentUser => {\n                        this.setState({ currentUser });\n                        currentUser.joinRoom({ roomId: process.env.REACT_APP_ROOM_ID })\n                            .then(room => {\n                                this.setState({ stillFetching: false });\n                            })\n                            .catch(() => {});\n\n                        currentUser.subscribeToRoom({\n                            roomId: process.env.REACT_APP_ROOM_ID,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: this.state.messages.concat(message)\n                                    });\n                                }\n                                // onUserJoined: user => {\n                                //     this.setState({ joinedUser: `${user} joined the chat room.` })\n                                // }\n                            },\n                            messageLimit: 50\n                        })\n                    })\n                    .catch(() => {});\n            }\n        });\n        \n    }\n\n    componentWillUnmount() {\n        dotenv.load();\n        if (!this.state.stillFetching) {\n            this.state.currentUser.leaveRoom({ roomId: process.env.REACT_APP_ROOM_ID })\n                .then(room => {})\n                .catch(err => {});\n        }\n    }\n\n    handleMessageChange(e) {\n        e.preventDefault();\n        this.setState({\n            message: e.target.value\n        });\n    };\n\n    handleSubmit(e) {\n        dotenv.load();\n        e.preventDefault();\n        if (this.state.message)\n        this.state.currentUser.sendMessage({\n            text: this.state.message,\n            roomId: process.env.REACT_APP_ROOM_ID\n        })\n            .then(() => {\n                this.setState({ message: '' });\n            })\n            .catch(err => {})\n    }\n\n    render () {\n        return (\n          <div className={classes.Chat}>\n              <h1 style={{color: 'silver', textAlign: 'center'}}> General Chat Page </h1>\n              <hr />\n              <MessageList loading={this.state.stillFetching} messages={this.state.messages} />\n              <hr />\n              <SendMessageForm message={this.state.message} handleSubmit={this.handleSubmit} changed={(event) => this.handleMessageChange(event)} />\n          </div>\n        );\n    }\n}\n\nexport default Chat;"],"sourceRoot":""}