{"version":3,"sources":["webpack:///./src/components/MessageList/MessageList.js","webpack:///./src/components/MessageList/MessageList.css","webpack:///./src/components/UI/SendMessageForm/SendMessageForm.js","webpack:///./src/components/UI/SendMessageForm/SendMessageForm.css","webpack:///./src/containers/Chat/Chat.css","webpack:///./src/containers/Chat/Chat.js"],"names":["_react","__webpack_require__","MessageList","document","getElementById","scrollIntoView","behavior","Component","_this2","this","content","_react2","default","createElement","_Spinner2","chatBox","count","props","loading","_Auxiliary2","className","classes","ScrollDownDiv","onClick","scrollToBottom","messages","map","message","style","id","you","length","senderId","fire","auth","currentUser","uid","backgroundColor","color","float","key","TimeStyle","createdAt","sender","name","padding","text","height","display","module","exports","scrollDownDiv","messageList","timeStyle","MessageForm","onSubmit","handleSubmit","onChange","event","changed","type","placeholder","value","SendButton","messageForm","sendButton","Chat","chat","_chatkitClient","Chatkit","require","_this","_classCallCheck","_getPrototypeOf","call","state","stillFetching","handleMessageChange","bind","_assertThisInitialized","dotenv","load","onAuthStateChanged","user","chatkit","instanceLocator","process","getUser","then","catch","createUser","res","setState","ChatManager","userId","tokenProvider","TokenProvider","url","connect","joinRoom","roomId","room","subscribeToRoom","hooks","onMessage","concat","messageLimit","leaveRoom","err","e","preventDefault","target","_this3","sendMessage","_this4","textAlign","_MessageList2","_SendMessageForm2"],"mappings":"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","file":"static/2.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport fire from \"../../config/fire\";\nimport classes from \"./MessageList.css\";\nimport Aux from \"../../hoc/Auxiliary/Auxiliary\";\n\nexport default class MessageList extends Component {\n\n    scrollToBottom = () => {\n        document.getElementById('latest').scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    render () {\n        let content = <Spinner chatBox={true} />, count = 0;\n        if (!this.props.loading) {\n            content = (\n                <Aux>\n                    <div className={classes.ScrollDownDiv}>\n                        <span onClick={this.scrollToBottom}> Scroll down to the latest message</span>\n                        <i onClick={this.scrollToBottom} className=\"material-icons\"> vertical_align_bottom </i>\n                    </div>\n                    <ul className={classes.MessageList}>\n                        {\n                            this.props.messages.map(message => {\n                                let style = {}, id='', you=false;\n                                count++;\n                                if (count === this.props.messages.length) id='latest';\n                                if (message.senderId === fire.auth().currentUser.uid) {\n                                    style = {backgroundColor: '#38ADAE', color: '#fff', float: 'right'};\n                                    you = true;\n                                }\n\n                                return (\n                                    <Aux key={message.id}>\n                                        <li style={style}>\n                                            <span className={classes.TimeStyle}> {message.createdAt} </span>\n                                            <div>\n                                                Sender: {you ? 'You' : message.sender.name}\n                                            </div>\n                                            <div style={{padding: '0 20px'}}>\n                                                {message.text}\n                                            </div>\n                                        </li>\n                                        <div id={id} style={{height: '1px', display: count === this.props.messages.length ? 'block':'none'}}> </div>\n                                    </Aux>\n                                )\n                            })\n                        }\n                    </ul>\n                </Aux>\n            );\n        }\n        return content;\n    }\n}","// removed by extract-text-webpack-plugin\nmodule.exports = {\"ScrollDownDiv\":\"py8e93--eQQtlChDf3r08\",\"scrollDownDiv\":\"py8e93--eQQtlChDf3r08\",\"MessageList\":\"_2oerWiM9vePfRjByng1n95\",\"messageList\":\"_2oerWiM9vePfRjByng1n95\",\"TimeStyle\":\"_2gHGA6QN_eF6cxAtIq1-Hl\",\"timeStyle\":\"_2gHGA6QN_eF6cxAtIq1-Hl\"};","import React from \"react\";\n\nimport classes from \"./SendMessageForm.css\";\n\nconst sendMessageForm = props => (\n    <form className={classes.MessageForm} onSubmit={props.handleSubmit}>\n        <input\n            onChange={(event) => props.changed(event)}\n            type=\"text\"\n            placeholder=\"Your message...\"\n            value={props.message} />\n            <i onClick={props.handleSubmit} className={\"material-icons \" + classes.SendButton}>send</i>\n    </form>\n);\n\nexport default sendMessageForm;","// removed by extract-text-webpack-plugin\nmodule.exports = {\"MessageForm\":\"vNmnlkEvqeDfF8k4ZB1qJ\",\"messageForm\":\"vNmnlkEvqeDfF8k4ZB1qJ\",\"SendButton\":\"morg6QiYzLhY9j1vi82Si\",\"sendButton\":\"morg6QiYzLhY9j1vi82Si\"};","// removed by extract-text-webpack-plugin\nmodule.exports = {\"Chat\":\"_2BK_doRKxlAkQZNg5PsVwe\",\"chat\":\"_2BK_doRKxlAkQZNg5PsVwe\"};","import React, { Component } from \"react\";\n\nimport { ChatManager, TokenProvider } from \"@pusher/chatkit-client\";\nimport MessageList from \"../../components/MessageList/MessageList\";\nimport SendMessageForm from \"../../components/UI/SendMessageForm/SendMessageForm\";\nimport dotenv from \"dotenv\";\nimport fire from \"../../config/fire\";\nimport classes from \"./Chat.css\";\n\nconst Chatkit = require('@pusher/chatkit-server');\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            messages: [],\n            currentUser: null,\n            stillFetching: true\n        };\n        this.handleMessageChange = this.handleMessageChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        dotenv.load();\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                let username = 'temporary';\n                const chatkit = new Chatkit.default({\n                    instanceLocator: process.env.REACT_APP_INSTANCE_LOC,\n                    key: process.env.REACT_APP_CHATKIT_KEY\n                });\n\n                chatkit.getUser({\n                    id: user.uid\n                })\n                    .then(() => {})\n                    .catch(() => {\n                        chatkit.createUser({\n                            id: user.uid,\n                            name: username\n                        })\n                            .then(res => {\n                                this.setState({ currentUser: res });\n                            })\n                            .catch(() => {});\n                    });\n\n                const chatManager = new ChatManager({\n                    instanceLocator: process.env.REACT_APP_INSTANCE_LOC,\n                    userId: user.uid,\n                    tokenProvider: new TokenProvider({ url: process.env.REACT_APP_TEST_TOKEN })\n                });\n\n                chatManager.connect()\n                    .then(currentUser => {\n                        this.setState({ currentUser });\n                        currentUser.joinRoom({ roomId: process.env.REACT_APP_ROOM_ID })\n                            .then(room => {\n                                this.setState({ stillFetching: false });\n                            })\n                            .catch(() => {});\n\n                        currentUser.subscribeToRoom({\n                            roomId: process.env.REACT_APP_ROOM_ID,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: this.state.messages.concat(message)\n                                    });\n                                }\n                                // onUserJoined: user => {\n                                //     this.setState({ joinedUser: `${user} joined the chat room.` })\n                                // }\n                            },\n                            messageLimit: 50\n                        })\n                    })\n                    .catch(() => {});\n            }\n        });\n        \n    }\n\n    componentWillUnmount() {\n        dotenv.load();\n        if (!this.state.stillFetching) {\n            this.state.currentUser.leaveRoom({ roomId: process.env.REACT_APP_ROOM_ID })\n                .then(room => {})\n                .catch(err => {});\n        }\n    }\n\n    handleMessageChange(e) {\n        e.preventDefault();\n        this.setState({\n            message: e.target.value\n        });\n    };\n\n    handleSubmit(e) {\n        dotenv.load();\n        e.preventDefault();\n        if (this.state.message)\n        this.state.currentUser.sendMessage({\n            text: this.state.message,\n            roomId: process.env.REACT_APP_ROOM_ID\n        })\n            .then(() => {\n                this.setState({ message: '' });\n            })\n            .catch(err => {})\n    }\n\n    render () {\n        return (\n          <div className={classes.Chat}>\n              <h1 style={{color: 'silver', textAlign: 'center'}}> General Chat Page </h1>\n              <hr />\n              <MessageList loading={this.state.stillFetching} messages={this.state.messages} />\n              <hr />\n              <SendMessageForm message={this.state.message} handleSubmit={this.handleSubmit} changed={(event) => this.handleMessageChange(event)} />\n          </div>\n        );\n    }\n}\n\nexport default Chat;"],"sourceRoot":""}